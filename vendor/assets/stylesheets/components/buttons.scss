//======================================================================
// EXAMPLE:
// <div class="button button-raised-{COLOR}">Text</div>
// <div class="button button-flat-{COLOR}">Text</div>
//======================================================================

// Variables
//----------------------------------------------------------------------

// $buttons: "button, .button, input[type='submit'], input[type='reset'], input[type='button']";
$buttons: ".button";

$default-button-rounded-corners: 4px;

// Buttons - base
//----------------------------------------------------------------------

#{$buttons} {
  background-color: transparent;
  border: 1px solid transparent;
  box-sizing: border-box;
  cursor: pointer;
  // font-size: $font-size-normal;
  font-size: $font-size-normal;
  font-weight: 600;
  height: $button-height;
  letter-spacing: 0.5px;
  line-height: 1.2;
  min-width: 0;
  outline: none;
  padding: 0 $spacing-normal;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  vertical-align: middle;
  white-space: nowrap;
  @include flex-parent();
  display: inline-flex;
  @include font-smoothing();
  @include no-touch-highlight;
  @include rounded-corners($default-button-rounded-corners);
  @include transition(all 0.2s ease-in-out);
  flex: 0 1 auto; // Stop buttons from expanding

  &:hover {
    text-decoration: none !important;
  }
}

.button.icon-left {
  padding-left: $spacing-normal - 8px;

  .material-icons {
    padding-right: 4px;
  }
}

.button.icon-right {
  padding-right: $spacing-normal - 8px;

  .material-icons {
    padding-left: 4px;
  }
}

// Buttons - sizes
//----------------------------------------------------------------------

.button-xsmall {
  font-size: $font-size-small;
  height: 28px !important;
  padding: 0 $spacing-xsmall;
}

// Using dense name to be consistent with MD spec
.button-small,
.button-dense {
  font-size: $font-size-small;
  height: $button-height-dense !important;
  min-width: $button-height * 0.8;
  padding: 0 $spacing-small;
}

.button-large {
  height: $button-height-large !important;
}

.button-normal {
  min-height: $button-height;
}

// Less left/right padding
.button-compact {
  padding-left: $spacing-small;
  padding-right: $spacing-small;
}

// Buttons - icon buttons
//----------------------------------------------------------------------

$button-icon-height: 48px;

// Basic icon without any coloring
.button-icon {
  background-color: transparent;
  border: none;
  color: color("icon");
  cursor: pointer;
  height: $button-icon-height;
  outline: none;
  text-align: center;
  width: $button-icon-height;
  @include material-icons();
  @include no-touch-highlight-color();
  @include rounded-corners(50%);
  @include transition(background-color 0.2s ease-in-out);
  @include flex-parent();

  &:active {
    background-color: rgba(0, 0, 0, 0.20);
  }
}

@media (hover: hover) {
  .button-icon {
    &:hover {
      background-color: rgba(0, 0, 0, 0.08);
    }

    &:active {
      background-color: rgba(0, 0, 0, 0.20);
    }
  }
}

// Button icon - sizes
//----------------------------------------------------------------------

// TODO make a standard size for small/large, not relative to normal

.button-icon-small {
  height: $button-icon-height * 0.8;
  width: $button-icon-height * 0.8;
}

.button-icon-large {
  height: $button-icon-height * 1.2;
  width: $button-icon-height * 1.2;
}

// Button icon - colors
//----------------------------------------------------------------------

@each $color-name, $color in $colors {
  .button-icon-#{$color-name} {
    background-color: $color;
    color: color("white");

    &:active {
      background-color: darken($color, 10%);
    }
  }

  // Devices with pointers
  @media (hover: hover) {
    .button-icon-#{$color-name} {
      &:hover {
        background-color: lighten($color, 10%);
      }

      &:active {
        background-color: darken($color, 10%);
      }
    }
  }
}

// Buttons - raised colored
//----------------------------------------------------------------------

@each $color-name, $color in $colors {
  .button-raised-#{$color-name} {
    background-color: $color;

    @if $color-name == "white" {
      color: color("black");
    } @else if $color-name == "offwhite" {
      color: color("text");
    } @else {
      color: color("white");
    }

    @include box-shadow(0 0 2px rgba(13,26,44,0.12), 0 1px 1px rgba(13,26,44,0.24));

    &:hover {
      background-color: lighten($color, 10%);
    }

    &:active {
      background-color: darken($color, 5%);
      @include box-shadow(0 3px 9px 0 rgba(0, 0, 0, 0.5));
    }
  }
}

// Buttons - flat colored
//----------------------------------------------------------------------

@each $color-name, $color in $colors {
  .button-flat-#{$color-name} {
    background-color: transparent;
    color: $color;

    &:hover {
      @if $color-name == "grey" {
        background-color: rgba(0, 0, 0, 0.1);
      } @else {
        background-color: lighten($color, 40%);
      }
    }

    &:active {
      @if $color-name == "grey" {
        background-color: rgba(0, 0, 0, 0.18);
      } @else {
        background-color: lighten($color, 30%);
      }
    }
  }
}

// Buttons - outline colored
//----------------------------------------------------------------------

@each $color-name, $color in $colors {
  .button-outline-#{$color-name} {
    background-color: transparent;
    border-color: $color;
    color: $color;

    &:hover,
    &.hover {
      // background-color: rgba(0, 0, 0, 0.05);
      background-color: lighten($color, 40%);
    }

    &:active,
    &.active {
      // background-color: rgba(0, 0, 0, 0.1);
      background-color: lighten($color, 35%);
    }
  }
}

// Buttons - override text color
//----------------------------------------------------------------------

@each $color-name, $color in $colors {
  .button.color-#{$color-name} {
    color: $color;
  }
}

// Buttons - Colored Floating Action Buttons (FAB)
//----------------------------------------------------------------------

.fab {
  bottom: $spacing-large;
  font-size: $font-size-icon;
  height: $button-fab-height;
  position: fixed !important;
  right: $spacing-large;
  width: $button-fab-height;
  @include elevation(12);
  @include box-shadow(0 3px 7px 0 rgba(0, 0, 0, 0.4));
  @include material-icons();
  @include rounded-corners(250px);
  @include text-shadow(0 -1px 0 color("helper"));
  @include flex-parent();
  @include flex-vertical-align-center();
  display: inline-flex;
}

@each $color-name, $color in $colors {
  .fab-#{$color-name} {
    background-color: $color;
    @if $color-name == "white" {
      color: color("black");
    } @else {
      color: color("white");
    }

    &:active {
      background: darken($color, 10%);
    }

    // &.mini {
    //   height: $button-fab-mini-height;
    //   width: $button-fab-mini-height;
    // }
  }

  @media (hover: hover) {
    .fab-#{$color-name} {
      &:hover {
        background-color: lighten($color, 5%);
        @include box-shadow(0 6px 12px 0 rgba(0, 0, 0, 0.5));
      }

      &:active {
        background: darken($color, 10%);
      }
    }
  }
}

// Position FAB buttons in bottom-right corner
[role="fab"] {
  bottom: $spacing-large;
  height: $button-fab-height;
  position: fixed !important;
  right: $spacing-large;
  @include elevation(12);
}

// Buttons - disabled
//----------------------------------------------------------------------

.button:disabled,
.button.disabled {
  background-color: rgba(0, 0, 0, 0.12);
  color: color("disabled");
  cursor: not-allowed;
  pointer-events: none;
  @include box-shadow(none);
}

// Buttons - with chevron icons
//----------------------------------------------------------------------

.button-with-chevron-left {
  display: inline-flex;
  padding-left: $spacing-small;
}

.button-with-chevron-right {
  display: inline-flex;
  padding-right: $spacing-small;
}

// Buttons - with normal icons + text
//----------------------------------------------------------------------

.button-icon-left,
.button-icon-right {
  display: inline-flex;
}

.button-icon-left {
  .material-icons {
    padding-right: $spacing-small;
  }
}

.button-icon-right {
  .material-icons {
    padding-left: $spacing-small;
  }
}

// Buttons - responsive
//----------------------------------------------------------------------

.button.responsive {
  width: 100%;
}

@media (min-width: $device-small) {
  .button.responsive {
    width: inherit;
  }
}

// Buttons - button group
//----------------------------------------------------------------------

.button-group {
  @include flex-parent();

  .button {
    @include rounded-corners(0);
  }

  .button:first-child {
    @include rounded-left-corners();
  }

  .button:last-child {
    @include rounded-right-corners();
  }

  .button:not(:first-child) {
    border-left: none;
  }
}
