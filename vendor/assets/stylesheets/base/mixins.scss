//======================================================================
// SCSS mixins accessible in every SCSS file imported after this one.
// Mixins abstract browser-specific vendor prefixes when applicable.
//======================================================================

// Default values for mixins
//----------------------------------------------------------------------

$default-rounded-corners-radius: 3px;

// Rounded corners
//----------------------------------------------------------------------

@mixin rounded-corners($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
}

@mixin rounded-top-corners($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: $radius $radius 0 0;
  -moz-border-radius: $radius $radius 0 0;
  -webkit-border-radius: $radius $radius 0 0;
}

@mixin rounded-right-corners($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: 0 $radius $radius 0;
  -moz-border-radius: 0 $radius $radius 0;
  -webkit-border-radius: 0 $radius $radius 0;
}

@mixin rounded-bottom-corners($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: 0 0 $radius $radius;
  -moz-border-radius: 0 0 $radius $radius;
  -webkit-border-radius: 0 0 $radius $radius;
}

@mixin rounded-left-corners($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: $radius 0 0 $radius;
  -moz-border-radius: $radius 0 0 $radius;
  -webkit-border-radius: $radius 0 0 $radius;
}

@mixin rounded-top-left-corner($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: $radius 0 0 0;
  -moz-border-radius: $radius 0 0 0;
  -webkit-border-radius: $radius 0 0 0;
}

@mixin rounded-top-right-corner($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: 0 $radius 0 0;
  -moz-border-radius: 0 $radius 0 0;
  -webkit-border-radius: 0 $radius 0 0;
}

@mixin rounded-bottom-left-corner($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: 0 0 0 $radius;
  -moz-border-radius: 0 0 0 $radius;
  -webkit-border-radius: 0 0 0 $radius;
}

@mixin rounded-bottom-right-corner($radius: $default-rounded-corners-radius) {
  behavior: url(border-radius.htc);
  border-radius: 0 0 $radius 0;
  -moz-border-radius: 0 0 $radius 0;
  -webkit-border-radius: 0 0 $radius 0;
}

// Gradient
//----------------------------------------------------------------------

@mixin linear-gradient($from, $to) {
  background-color: $from;
  background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from), to($to));
  background-image: -moz-linear-gradient(top, $from, $to);
  background-image: -ms-linear-gradient(top, $from, $to);
  background-image: -o-linear-gradient(top, $from, $to);
  background-image: linear-gradient(top, $from, $to);
}

// Effects
//----------------------------------------------------------------------

@mixin transition($effect...) {
  @if length($effect) == 0 {
    $effect: all 0.20s ease;
  }

  transition: $effect;
  -moz-transition: $effect;
  -o-transition: $effect;
  -webkit-transition: $effect;
}

@mixin transform($text...) {
  -webkit-transform: $text;
  -moz-transform: $text;
  -ms-transform: $text;
  transform: $text;
}

// Visibility
//----------------------------------------------------------------------

@mixin visibility($text) {
  visibility: $text;
  -webkit-backface-visibility: $text;
  -moz-backface-visibility: $text;
  backface-visibility: $text;
}

// See: css-tricks.com/css-transparency-settings-for-all-broswers
@mixin transparency($value: 0.5) {
  filter: alpha(opacity=($value * 100));
  opacity: $value;
  zoom: 1;
}

// Shadows
//----------------------------------------------------------------------

@mixin box-shadow($text...) {
  @if length($text) == 0 {
    $text: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.16);
  }

  box-shadow: $text;
  -moz-box-shadow: $text;
  -webkit-box-shadow: $text;
}

@mixin text-shadow($text) {
  text-shadow: $text;
  -moz-text-shadow: $text;
  -webkit-text-shadow: $text;
}

// Flexbox
//----------------------------------------------------------------------

// For a row of flex elements, such as the appbar.
@mixin flex-parent-row() {
  align-items: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  display: flex;
  display: -ms-flexbox;
  display: -webkit-flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
}

@mixin flex-parent-row-align-top() {
  @include flex-parent-row();
  align-items: flex-start;
  -ms-flex-align: flex-start;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
}

// Center elements vertically and horizontally
@mixin flex-center() {
  align-items: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  display: flex;
  display: -ms-flexbox;
  display: -webkit-flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  height: 100%;
  width: 100%;
}

// Grid list
@mixin flex-grid-list() {
  align-items: flex-start;
  -ms-flex-align: flex-start;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  display: flex;
  display: -ms-flexbox;
  display: -webkit-flex;
  flex-direction: row;
  flex-wrap: wrap;
}

// Boxes
//----------------------------------------------------------------------

// Using border-box takes element's padding into consideration
@mixin full-width() {
  box-sizing: border-box !important;
  -moz-box-sizing: border-box !important;
  -webkit-box-sizing: border-box !important;
  width: 100% !important;
}

// Touch
//----------------------------------------------------------------------

// By default, touch devices highlight elements when selected
@mixin no-touch-highlight() {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
}

@mixin no-touch-highlight-color() {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
}

// Truncating text
//----------------------------------------------------------------------

@mixin truncate-text() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin force-text-wrap() {
  overflow: inherit;
  text-overflow: inherit;
  white-space: normal;
  word-wrap: break-word;
}

// Shared lists styles
//----------------------------------------------------------------------

@mixin list-item() {
  font-size: $font-size-normal;
  min-height: 48px;
  @include flex-parent-row();
  @include no-touch-highlight-color();
  @include transition(background-color 0.30s ease);
}

@mixin list-item-icon() {
  color: color("icon");
  padding-left: $spacing-normal;
  text-align: left;
  width: 30px;
}

@mixin list-item-primary() {
  color: color("text");
  flex: 1;
  font-size: $font-size-normal;
  padding-left: $spacing-normal;
  padding-right: $spacing-normal;
  @include truncate-text();
}

@mixin list-item-primary-subtext() {
  color: color("helper");
  font-size: $font-size-small;
  font-weight: normal;
  padding-top: $spacing-xsmall;
}

@mixin list-item-secondary() {
  color: color("icon");
  padding-right: $spacing-normal;
  text-align: right;
}
